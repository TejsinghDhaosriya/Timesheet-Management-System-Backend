version: '3.4'

networks:
 backend:

services:
  apigateway:
    container_name: api-gateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ../src/main/ApiGateway/Dockerfile
    ports: 
       - 5001:443
       - 8001:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=5001
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ./https/aspnetapp.pfx:/https/aspnetapp.pfx:ro
    networks:
        - backend
  timesheetservice:
    container_name: timesheet-service
    image: ${DOCKER_REGISTRY-}timesheetservice
    build:
      context: .
      dockerfile: ../src/main/Services/TimesheetService/Dockerfile
    networks:
     - backend
  keycloak:
    container_name: keycloak-service
    image: quay.io/keycloak/keycloak:20.0.0
    command: 
    - start-dev
    - --features=declarative-user-profile 
    volumes:
     - $PWD/https/server.crt.pem:/opt/keycloak/conf/server.crt.pem
     - $PWD/https/server.key.pem:/opt/keycloak/conf/server.key.pem
    environment:
        KC_DB: postgres
        KC_DB_URL_HOST: 
        KC_DB_URL_DATABASE: keycloak
        KC_DB_USERNAME: 
        KC_DB_SCHEMA: public
        KC_DB_PASSWORD: 
        KC_DB_URL_PORT: 
        KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/conf/server.crt.pem
        KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/conf/server.key.pem
        KEYCLOAK_ADMIN: admin
        KEYCLOAK_ADMIN_PASSWORD: al@123
        PROXY_ADDRESS_FORWARDING: 'true'
        KC_PROXY: edge
    ports:
        # - "8890:8080"
        - "8443:8443"

    networks:
     - backend
     
volumes:
  database-data: # named volumes can be managed easier using docker-compose
   

