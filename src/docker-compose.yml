version: '3.4'

networks:
 backend:

services:
  apigateway:
    container_name: api-gateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ../src/main/ApiGateway/Dockerfile
    ports: 
       - 5001:443
       - 8001:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=5001
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ./https/aspnetapp.pfx:/https/aspnetapp.pfx:ro
    networks:
        - backend
  timesheetservice:
    container_name: timesheet-service
    image: ${DOCKER_REGISTRY-}timesheetservice
    build:
      context: .
      dockerfile: ../src/main/Services/TimesheetService/Dockerfile
    networks:
     - backend
  keycloak:
      image: quay.io/keycloak/keycloak:latest
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: postgres
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_SCHEMA: public
        DB_PASSWORD: 
        KEYCLOAK_USER: 
        KEYCLOAK_PASSWORD: 
      ports:
        - 8080:8080
volumes:
  database-data: # named volumes can be managed easier using docker-compose
   

